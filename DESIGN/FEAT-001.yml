meta:
transitions:
- from: idle
to: generating
on: click_generate
action: generator.load_stub
- from: generating
to: ready
on: generator_success
action: set_progression
- from: generating
to: error
on: generator_fail
action: set_error
- from: ready
to: playing
on: click_play | space_key
guard: has_progression
action: audio.play_progression
- from: playing
to: ready
on: click_stop | space_key | playback_end
action: audio.stop

playback_rules:
tempo_bpm: use progression.tempo_bpm (default 120)
gain_ramp_ms: 8 # avoid clicks
note_shape: sustain for full chord beats
voice_count: up to 6 (simple oscillators)


# Dev Plan

dev:
language: TypeScript
framework: React (Vite) — client only
files_to_touch:
- src/App.tsx
- src/components/Controls.tsx
- src/components/ProgressionDisplay.tsx
- src/components/PianoRoll.tsx
- src/core/generator.ts
- src/services/AudioPlayer.ts
- tests/e2e/generation.test.tsx
coding_standards:
- tsconfig: strict true
- no external audio libs (WebAudio only in this feature)
- pure functions in core; side-effects isolated in services

scripts:
dev: "pnpm dev"
test: "vitest run"

acceptance_tests:
- "Given fresh start, when user clicks 'Generate', then 'Cmaj', 'Gmaj', 'Am', 'Fmaj' render in order."
- "Given progression is visible, when user clicks 'Play', then playback starts, state = playing, and Play label switches to 'Stop'."
- "Given playing, when user clicks 'Stop', then playback halts within 50ms and state = ready."
- "Given ready with progression, when user presses Space (and focus is not in an input), playback toggles same as clicking Play/Stop."
- "Generate is disabled while generating; Play is disabled while generating."
- "No console errors during Generate → Play → Stop loop."

goals:
- Generate progression (Cmaj, Gmaj, Am, Fmaj stub)
- Piano Roll visualization showing notes on timeline
- Audio playback with WebAudio (Play/Stop/Space key)
- Basic chord swapping (click chord to swap to new valid option)
- State management (idle → generating → ready → playing)

non_goals:
- Advanced music theory / beauty heuristics (voice leading, tensions)
- MIDI export/import
- Offline/PWA shell
- VST conversion
- Complex UI (scales selector, chord library, etc.)

risks:
- WebAudio lifecycle quirks (user gesture requirement); mitigated by button/Space triggering
- Data model drift; mitigated by minimal fields and unit tests
- Keyboard event conflicts; mitigated by guarding against focused inputs